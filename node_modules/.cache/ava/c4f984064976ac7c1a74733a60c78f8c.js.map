{"version":3,"sources":["pricing-rules.test.js"],"names":["testBasket","sku","name","price","total","t","log","true"],"mappings":"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","file":"pricing-rules.test.js","sourcesContent":["import test from 'ava'\nimport {pricingRules} from '../src/pricing-rules.js'\n\ntest('test pricingRules 1x ipd', t => {\n  let testBasket = [{ sku: 'ipd', name: 'Super iPad', price: 549.99 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 549.99)\n})\ntest('test pricingRules 3x ipd', t => {\n  let testBasket = [\n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === (549.99 * 3))\n})\ntest('test pricingRules 4x ipd', t => {\n  let testBasket = [\n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 },\n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 449.99 * 4)\n})\ntest('test pricingRules 1x atv', t => {\n  let testBasket = [{ sku: 'atv', name: 'Apple TV', price: 109.50 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50)\n})\ntest('test pricingRules 2x atv', t => {\n  let testBasket = [\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50 * 2)\n})\ntest('test pricingRules 3x atv', t => {\n  let testBasket = [\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50 * 2)\n})\ntest('test pricingRules 4x atv', t => {\n  let testBasket = [\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 },\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === (109.50 * 2) + 109.50)\n})\ntest('test pricingRules 6x atv', t => {\n  let testBasket = [\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 },\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 },\n    { sku: 'atv', name: 'Apple TV', price: 109.50 }, \n    { sku: 'atv', name: 'Apple TV', price: 109.50 }\n  ]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50 * 4)\n})\ntest('test pricingRules 1x atv + 1x ipd', t => {\n  let testBasket = [{ sku: 'atv', name: 'Apple TV', price: 109.50 }, { sku: 'ipd', name: 'Super iPad', price: 549.99 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50 + 549.99)\n})\ntest('test pricingRules 1x mbp + 1x vga (free)', t => {\n  let testBasket = [{ sku: 'mbp', name: 'MacBook Pro', price: 1399.99 }, { sku: 'vga', name: 'VGA adapter', price: 30.00 }, { sku: 'vga', name: 'VGA adapter', price: 30.00 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 1399.99)\n})"]}
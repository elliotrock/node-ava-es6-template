{"version":3,"sources":["pricing-rules.test.js"],"names":["testBasket","sku","name","price","total","t","log","true"],"mappings":";;;;;AAAA;;;;AACA;;;;AAEA,mBAAK,0BAAL,EAAiC,aAAK;AAAA;;AACpC,MAAIA,aAAa,CAAC,EAAEC,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAAD,CAAjB;AACA,MAAIC,QAAQ,gCAAaJ,UAAb,CAAZ;AACAK,IAAEC,GAAF,CAAMF,KAAN;AACAC,IAAEE,IAAF,uBAAO,0CAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CALD;AAMA,mBAAK,0BAAL,EAAiC,aAAK;AAAA;;AACpC,MAAIP,aAAa,CAAC,EAAEC,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAAD,EACf,EAAEF,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EADe,EAEf,EAAEF,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAFe,CAAjB;AAGA,MAAIC,QAAQ,gCAAaJ,UAAb,CAAZ;AACAK,IAAEC,GAAF,CAAMF,KAAN;AACAC,IAAEE,IAAF,yBAAO,uDAAW,SAAS,CAApB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CAPD;AAQA,mBAAK,0BAAL,EAAiC,aAAK;AAAA;;AACpC,MAAIP,aAAa,CAAC,EAAEC,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAAD,EACf,EAAEF,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EADe,EAEf,EAAEF,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAFe,EAGf,EAAEF,KAAK,KAAP,EAAcC,MAAM,YAApB,EAAkCC,OAAO,MAAzC,EAHe,CAAjB;AAIA,MAAIC,QAAQ,gCAAaJ,UAAb,CAAZ;AACAK,IAAEC,GAAF,CAAMF,KAAN;AACAC,IAAEE,IAAF,yBAAO,uDAAW,SAAS,CAApB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CARD;AASA,mBAAK,0BAAL,EAAiC,aAAK;AAAA;;AACpC,MAAIP,aAAa,CAAC,EAAEC,KAAK,KAAP,EAAcC,MAAM,UAApB,EAAgCC,OAAO,MAAvC,EAAD,CAAjB;AACA,MAAIC,QAAQ,gCAAaJ,UAAb,CAAZ;AACAK,IAAEC,GAAF,CAAMF,KAAN;AACAC,IAAEE,IAAF,yBAAO,2CAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CALD;AAMA,mBAAK,0BAAL,EAAiC,aAAK;AAAA;;AACpC,MAAIP,aAAa,CAAC,EAAEC,KAAK,KAAP,EAAcC,MAAM,UAApB,EAAgCC,OAAO,MAAvC,EAAD,EAAkD,EAAEF,KAAK,KAAP,EAAcC,MAAM,UAApB,EAAgCC,OAAO,MAAvC,EAAlD,CAAjB;AACA,MAAIC,QAAQ,gCAAaJ,UAAb,CAAZ;AACAK,IAAEC,GAAF,CAAMF,KAAN;AACAC,IAAEE,IAAF,yBAAO,uDAAW,SAAS,CAApB,sBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,CALD","file":"pricing-rules.test.js","sourcesContent":["import test from 'ava'\nimport {pricingRules} from '../src/pricing-rules.js'\n\ntest('test pricingRules 1x ipd', t => {\n  let testBasket = [{ sku: 'ipd', name: 'Super iPad', price: 549.99 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 549.99)\n})\ntest('test pricingRules 3x ipd', t => {\n  let testBasket = [{ sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === (549.99 * 3))\n})\ntest('test pricingRules 4x ipd', t => {\n  let testBasket = [{ sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 },\n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }, \n    { sku: 'ipd', name: 'Super iPad', price: 549.99 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === (449.99 * 4))\n})\ntest('test pricingRules 1x atv', t => {\n  let testBasket = [{ sku: 'atv', name: 'Apple TV', price: 109.50 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === 109.50)\n})\ntest('test pricingRules 2x atv', t => {\n  let testBasket = [{ sku: 'atv', name: 'Apple TV', price: 109.50 }, { sku: 'atv', name: 'Apple TV', price: 109.50 }]\n  let total = pricingRules(testBasket) \n  t.log(total)\n  t.true(total === (109.50 * 2))\n})"]}